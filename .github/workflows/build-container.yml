name: Docker Image CI

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: pollstar-votes-api
  FUNCTION_IMAGE_NAME: pollstar-votes-func
  JOB_IMAGE_NAME: pollstar-votes-job

jobs:
  versionize:
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.gitversion.outputs.SemVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.14
        with:
          useConfigFile: true

  build:
    needs: [versionize]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: "Push to Azure Container Registry"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build & Push
        working-directory: src
        run: |
          docker build . --file Dockerfile --tag ${{ secrets.ACR_LOGIN_SERVER }}/$IMAGE_NAME:${{needs.versionize.outputs.semver}}
          docker build . --file Dockerfile --tag ${{ secrets.ACR_LOGIN_SERVER }}/$IMAGE_NAME:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/$IMAGE_NAME:${{needs.versionize.outputs.semver}}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/$IMAGE_NAME:latest

  build-job:
    needs: [versionize]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: "Push to Azure Container Registry"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build & Push Job
        run: |
          docker build . --file Dockerfile.job --tag ${{ secrets.ACR_LOGIN_SERVER }}/$JOB_IMAGE_NAME:${{needs.versionize.outputs.semver}}
          docker build . --file Dockerfile.job --tag ${{ secrets.ACR_LOGIN_SERVER }}/$JOB_IMAGE_NAME:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/$JOB_IMAGE_NAME:${{needs.versionize.outputs.semver}}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/$JOB_IMAGE_NAME:latest

  build-func:
    needs: [versionize]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: "Push to Azure Container Registry"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build & Push
        working-directory: src
        run: |
          docker build . --file Dockerfile.func --tag ${{ secrets.ACR_LOGIN_SERVER }}/$FUNCTION_IMAGE_NAME:${{needs.versionize.outputs.semver}}
          docker build . --file Dockerfile.func --tag ${{ secrets.ACR_LOGIN_SERVER }}/$FUNCTION_IMAGE_NAME:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/$FUNCTION_IMAGE_NAME:${{needs.versionize.outputs.semver}}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/$FUNCTION_IMAGE_NAME:latest

  publish-bicep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build & Push
        working-directory: infrastructure
        run: |
          az bicep build --file main.bicep
      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          name: bicep-templates
          path: infrastructure/*.json

  infrastructure-incremental-test:
    needs: [build, build-func, build-job, publish-bicep, versionize]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: bicep-templates
          path: ./infrastructure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_PROD }}
      - name: Deploy Infrastructure
        id: arm
        uses: Azure/cli@v1
        with:
          inlineScript: az deployment sub create --name pollstar-votes-api  --location northeurope --template-file ./infrastructure/main.json --parameters ./infrastructure/params.prod.json --parameters containerVersion=${{needs.versionize.outputs.semver}}
